# Base system set up
- name: "Configure APT"
  copy:
    src: 51no-recommends
    dest: /etc/apt/apt.conf.d/51no-recommends
  become: yes
  tags:
    - apt

- name: "Delete unused APT source file"
  file:
    dest: "/etc/apt/sources.list.d/deb_debian_org_debian.list"
    state: absent
  become: yes
  tags:
    - apt

- name: "Clear APT sources"
  copy:
    content: ""
    dest: /etc/apt/sources.list
  become: yes
  tags:
    - apt

- name: "Set up APT repositories"
  # Use template instead of apt_repository to delete all other sources.
  template:
    src: debian.list
    dest: /etc/apt/sources.list.d/debian.list
  become: yes
  tags:
    - apt

- name: "Install system packages"
  # TODO: Add packages to /var/lib/deborphan/keep
  apt:
    name: "{{ packages + extra_packages }}"
    state: present
  become: yes
  vars:
    packages:
      # Ansible
      # - ansible - ansible itself is not needed on nodes.
      - python3-apt
      - apt-listbugs # Warn in case there is a serious bug in the new version
      # System
      - etckeeper
      - fonts-font-awesome  # Font with emoticons
      - lightdm
      - redshift
      - rsyslog
      - unattended-upgrades
      # System administration
      - bind9-dnsutils # dig, nslookup
      #- deborphan  # deborphan is probably no longer maintained
      - fish  # Shell
      - htop
      - network-manager-applet  # Applet for network-manager
      - resolvconf
      - rsync
      - screen
      - systemd-timesyncd # NTP client
      - tree
      # Applications
      - arandr  # GUI for video (monitors) management
      - curl
      - chromium
      - eog  # Eye Of Gnome - display images
      - evince  # PDF viewer
      - firefox-esr
      - git  # Also used by etckeeper
      - imagemagick
      - libreoffice
      - mpv
      - pavucontrol  # GUI for audio management
      - pipx
      - scrot # Screenshots
      - thunar  # file manager
      - webext-ublock-origin-chromium  # uBlock Origin for chromium
      - webext-ublock-origin-firefox  # uBlock Origin for firefox
      # Vim and addons
      - vim-gtk3

- name: "Delete useless and dangerous packages"
  apt:
    name: "{{ packages }}"
    state: absent
    autoremove: yes
  become: yes
  vars:
    packages:
      - aptitude
      - nano
      # CUPS browsed is full of vulnerabilities.
      # https://www.evilsocket.net/2024/09/26/Attacking-UNIX-systems-via-CUPS-Part-I/
      - cups-browsed

- name: "Enable locales"
  locale_gen:
      name: "{{ item }}"
  become: yes
  loop:
    - en_DK.UTF-8
    - cs_CZ.UTF-8

- name: "Change default locales"
  block:
    - name: "Check default locale"
      copy:
        dest: /etc/default/locale
        content: "#  File generated by update-locale\nLANG={{ default_locale }}\nLANGUAGE={{ default_locale }}\n"
      check_mode: yes
      changed_when: false
      register: default_locale_result
    - name: "Change default locale"
      command: update-locale LANG={{ default_locale|quote }} LANGUAGE={{ default_locale|quote }}
      when: default_locale_result is changed
      become: yes
  vars:
    default_locale: en_DK.UTF-8

- name: "Set up keyboard layouts"
  copy:
    src: default_keyboard
    dest: /etc/default/keyboard
  become: yes

- name: "Disable etckeeper daily commits"
  lineinfile:
    path: /etc/etckeeper/etckeeper.conf
    regexp: "AVOID_DAILY_AUTOCOMMITS"
    line: "AVOID_DAILY_AUTOCOMMITS=1"
  become: yes

# DEPRECATED since 3/2022.
- name: "Delete obsolete redshift systemd override directory"
  file:
    path: "/etc/systemd/user/redshift.service.d/override.conf"
    state: absent
  become: yes

- name: "Redshift systemd service"
  copy:
    src: "redshift.service"
    dest: "/etc/systemd/user/redshift.service"
  become: yes

# systemd module does not work in this case.
- name: "Enable redshift service for all users"
  command: systemctl --global enable redshift
  args:
    creates: /etc/systemd/user/default.target.wants/redshift.service
  become: yes

- name: "Get version of chezmoi"
  command: dpkg-query --show --showformat '${Version}' chezmoi
  check_mode: no
  changed_when: false
  # Ignore error if the package isn't installed.
  ignore_errors: true
  register: chezmoi_version_result

- name: "Get latest version of chezmoi"
  uri:
    url: https://api.github.com/repos/twpayne/chezmoi/releases?per_page=1
    headers:
      Accept: "application/vnd.github+json"
      X-GitHub-Api-Version: "2022-11-28"
  check_mode: no
  register: chezmoi_release_result

- name: "Determine whether install chezmoi"
  set_fact:
    install_chezmoi: "{{ 'v' + chezmoi_version_result.stdout < chezmoi_release_result.json[0].name }}"

- name: "Install chezmoi"
  block:
    - name: "Find AMD64 DEB package"
      set_fact:
        chezmoi_deb_asset: "{{ asset.browser_download_url }}"
        chezmoi_deb_asset_name: "{{ asset.name }}"
      when: asset.name.endswith('amd64.deb')
      loop: "{{ chezmoi_release_result.json[0].assets }}"
      loop_control:
        loop_var: asset
    - name: "Download chezmoi DEB package"
      get_url:
        url: "{{ chezmoi_deb_asset }}"
        dest: "/tmp/{{ chezmoi_deb_asset_name }}"
    - name: "Install chezmoi DEB package"
      command: dpkg -i "/tmp/{{ chezmoi_deb_asset_name }}"
      become: yes
  when: install_chezmoi
